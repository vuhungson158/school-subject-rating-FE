export type BigClass = keyof typeof BigEnum;
export type MiddleClass = keyof typeof MiddleEnum;
export type SmallClass = keyof typeof SmallEnum;

export type NestedBig = {
    [key in BigClass]+?: {
        label: string;
        child: NestedMiddle
    }
}

export type NestedMiddle = {
    [key in MiddleClass]+?: {
        label: string;
        child: NestedSmall[];
    }
}

export type NestedSmall = {
    name: SmallClass;
    label: string;
}

export enum SmallEnum {
    HUMANITIES = "HUMANITIES",
    SOCIAL = "SOCIAL",
    NATURAL = "NATURAL",
    SPORTS_HEALTH = "SPORTS_HEALTH",

    ENGLISH = "ENGLISH",
    CHINESE = "CHINESE",
    KOREAN = "KOREAN",
    JAPANESE = "JAPANESE",

    PRACTICE_SKILLS = "PRACTICE_SKILLS",
    CAREER_DEVELOPMENT = "CAREER_DEVELOPMENT",

    BASIC_SPECIAL_TRAINING = "BASIC_SPECIAL_TRAINING",

    BASIC_INFORMATION = "BASIC_INFORMATION",
    BUSINESS_ACCOUNTING = "BUSINESS_ACCOUNTING",

    UPGRADE_INFORMATION = "UPGRADE_INFORMATION",

    NETWORK = "NETWORK",
    DATA_SCIENCE = "DATA_SCIENCE",
    ACCOUNTING = "ACCOUNTING",
    BUSINESS = "BUSINESS",
    INTERNATIONAL_BUSINESS = "INTERNATIONAL_BUSINESS",

    SEMINAR = "SEMINAR",

    SPECIALIZED_SPECIAL_TRAINING = "SPECIALIZED_SPECIAL_TRAINING",
}

enum MiddleEnum {
    GENERAL_EDUCATION = "GENERAL_EDUCATION",
    LANGUAGE = "LANGUAGE",
    CAREER_DEVELOPMENT = "CAREER_DEVELOPMENT",
    BASIC_SPECIAL_TRAINING = "BASIC_SPECIAL_TRAINING",

    SPECIALIZED_BASIS = "SPECIALIZED_BASIS",
    SPECIALIZED_UPGRADE = "SPECIALIZED_UPGRADE",
    SPECIALIZED_PRACTICAL = "SPECIALIZED_PRACTICAL",
    SEMINAR = "SEMINAR",
    SPECIALIZED_SPECIAL_TRAINING = "SPECIALIZED_SPECIAL_TRAINING",
}

export enum BigEnum {
    BASIC_GENERAL = "BASIC_GENERAL",
    SPECIALIZED_EDUCATION = "SPECIALIZED_EDUCATION",
}
